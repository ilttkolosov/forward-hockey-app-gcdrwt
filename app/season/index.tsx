// app/seasons/index.tsx

import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  RefreshControl,
  Alert,
  Dimensions,
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { useRouter } from 'expo-router';
import Icon from '../../components/Icon';
import { colors, commonStyles } from '../../styles/commonStyles';

const { width } = Dimensions.get('window');

// --- –¢–∏–ø—ã –¥–ª—è —Å–µ–∑–æ–Ω–æ–≤ ---
interface SeasonOption {
  id: string; // –ò—Å–ø–æ–ª—å–∑—É–µ–º string –¥–ª—è ID
  name: string;
  start: Date;
  end: Date;
}

// --- –û–ø—Ü–∏–∏ —Å–µ–∑–æ–Ω–æ–≤ ---
const SEASON_OPTIONS: SeasonOption[] = [
  {
    id: 'recent',
    name: '–ù–µ–¥–∞–≤–Ω–∏–µ –∏–≥—Ä—ã',
    start: new Date(new Date().setDate(new Date().getDate() - 30)), // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    end: new Date(),
  },
  {
    id: 'season_2025_2026',
    name: '–°–µ–∑–æ–Ω 2025-2026',
    start: new Date('2025-07-01'),
    end: new Date('2026-06-30'),
  },
  {
    id: 'season_2024_2025',
    name: '–°–µ–∑–æ–Ω 2024-2025',
    start: new Date('2024-07-01'),
    end: new Date('2025-06-30'),
  },
  {
    id: 'season_2023_2024',
    name: '–°–µ–∑–æ–Ω 2023-2024',
    start: new Date('2023-07-01'),
    end: new Date('2024-06-30'),
  },
  {
    id: 'season_2022_2023',
    name: '–°–µ–∑–æ–Ω 2022-2023',
    start: new Date('2022-07-01'),
    end: new Date('2023-06-30'),
  },
];
// --- –ö–æ–Ω–µ—Ü –æ–ø—Ü–∏–π —Å–µ–∑–æ–Ω–æ–≤ ---

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞ —Å–µ–∑–æ–Ω–∞ ---
const formatSeasonPeriod = (season: SeasonOption): string => {
  if (season.id === 'recent') {
    return '–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü';
  }
  const startYear = season.start.getFullYear();
  const endYear = season.end.getFullYear();
  return `${startYear}-${endYear}`;
};

// --- –ò–∫–æ–Ω–∫–∏ —Å–µ–∑–æ–Ω–æ–≤ ---
const seasonIcons = ['üèÜ', 'üìÖ', '‚è≥', 'üóìÔ∏è', 'üìâ'];

export default function SeasonsScreen() {
  const router = useRouter();

  const handleSeasonPress = (season: SeasonOption) => {
    console.log('SeasonsScreen: Season selected:', season.id);
    
    // --- –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–µ–∑–æ–Ω–∞ ---
    const startDateString = season.start.toISOString().split('T')[0];
    const endDateString = season.end.toISOString().split('T')[0];
    
    
    //router.push('/Test'); // <-- –ù–∞–≤–∏–≥–∏—Ä—É–µ–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    // –ù–∞–≤–∏–≥–∏—Ä—É–µ–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø–µ—Ä–µ–¥–∞–≤–∞—è –¥–∞—Ç—ã
    router.push({
        pathname: '/archive', // <-- –ù–∞–≤–∏–≥–∏—Ä—É–µ–º –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        params: { 
        date_from: startDateString, 
        date_to: endDateString,
        seasonName: season.name // <-- –ü–µ—Ä–µ–¥–∞–µ–º –∏–º—è —Å–µ–∑–æ–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        }
    });
  }// --- –ö–û–ù–ï–¶ –û–ë–ù–û–í–õ–ï–ù–ò–Ø ---

  const handleBackPress = () => {
    router.back();
  };

  return (
    <SafeAreaView style={commonStyles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity onPress={handleBackPress} style={styles.backButton}>
          <Icon name="chevron-back" size={24} color={colors.text} />
        </TouchableOpacity>
        <View style={styles.headerTitleContainer}>
          <Text style={commonStyles.title}>–ê—Ä—Ö–∏–≤ –º–∞—Ç—á–µ–π</Text>
          <Text style={commonStyles.textSecondary}>–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–≥—Ä</Text>
        </View>
      </View>

      {/* Seasons List */}
      <ScrollView
        style={styles.seasonsContainer}
        showsVerticalScrollIndicator={false}
        // refreshControl={
        //   <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />
        // }
      >
        {SEASON_OPTIONS.map((season, index) => (
          <TouchableOpacity
            key={season.id}
            style={styles.seasonTile}
            onPress={() => handleSeasonPress(season)}
            activeOpacity={0.7}
          >
            {/* --- –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±–µ—Ä–Ω—É–ª —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –æ–¥–∏–Ω –∫–æ—Ä–Ω–µ–≤–æ–π View --- */}
            <View style={styles.seasonTileContentWrapper}> 
              <View style={styles.seasonTileContent}>
                <View style={styles.seasonIcon}>
                  <Text style={styles.seasonIconText}>
                    {seasonIcons[index % seasonIcons.length]}
                  </Text>
                </View>
                <View style={styles.seasonInfo}>
                  <Text style={styles.seasonName}>{season.name}</Text>
                  <Text style={styles.seasonPeriod}>{formatSeasonPeriod(season)}</Text>
                </View>
                <Icon
                  name="chevron-forward"
                  size={20}
                  color={colors.textSecondary}
                  style={styles.chevronIcon}
                />
              </View>
            </View>
            {/* --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø --- */}
          </TouchableOpacity>
        ))}
      </ScrollView>

      {/* Bottom spacing */}
      <View style={{ height: 32 }} />
    </SafeAreaView>
  );
}

// --- –°—Ç–∏–ª–∏ ---
const styles = StyleSheet.create({
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12,
    backgroundColor: colors.background,
    borderBottomWidth: 1,
    borderBottomColor: colors.border,
  },
  backButton: {
    marginRight: 16,
    padding: 4,
  },
  headerTitleContainer: {
    flex: 1,
    alignItems: 'center',
  },
  seasonsContainer: {
    flex: 1,
    paddingHorizontal: 16,
    paddingVertical: 16,
  },
  seasonTile: {
    backgroundColor: colors.surface,
    borderRadius: 16,
    padding: 20,
    marginBottom: 16,
    borderWidth: 1,
    borderColor: colors.border,
    boxShadow: `0px 2px 8px ${colors.shadow}`,
    elevation: 2,
  },
  // --- –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å –¥–ª—è –æ–±—ë—Ä—Ç–∫–∏ ---
  seasonTileContentWrapper: {
    // –≠—Ç–æ—Ç —Å—Ç–∏–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º, –Ω–æ –æ–Ω –Ω—É–∂–µ–Ω –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ JSX
  },
  // --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
  seasonTileContent: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  seasonIcon: {
    marginRight: 16,
    width: 48,
    height: 48,
    borderRadius: 24,
    backgroundColor: colors.primary,
    justifyContent: 'center',
    alignItems: 'center',
  },
  seasonIconText: {
    fontSize: 24,
  },
  seasonInfo: {
    flex: 1,
  },
  seasonName: {
    fontSize: 18,
    fontWeight: '600',
    color: colors.text,
    marginBottom: 4,
  },
  seasonPeriod: {
    fontSize: 14,
    color: colors.textSecondary,
  },
  chevronIcon: {
    marginLeft: 8,
  },
  listContainer: {
    padding: 16,
    paddingBottom: 32,
  },
});